#
# Bahub - File Repository API client configuration
# For documentation see: https://file-repository.readthedocs.io/en/latest/client/configuration-reference.html
#
# This is a reference configuration file that should contain all options.
#
# Maintainers: Please change with caution, this file is used in automated E2E tests
# Notice: To test this configuration you need to run `docker-compose up` in ./test/env/s3pb directory
#

accesses:
    secured:
        url: "${SERVER_URL}"
        token: "${API_TOKEN}"

encryption:
    strong:
        private_key_path: "../backup-maker/resources/test/gpg-key.asc"
        public_key_path: ""
        passphrase: "riotkit"
        email: "test@riotkit.org"

transports:
    local:
        type: bahub.transports.sh
        spec: {}

    docker_mysql:
        type: bahub.transports.docker
        spec:
            container: "s3pb_db_mysql_1"

    docker_fs:
        type: bahub.transports.docker
        spec:
            container: "nginx_bahub_test"

    side_docker_fs:
        type: bahub.transports.sidedocker
        spec:
            orig_container: "nginx_bahub_test"
            temp_container_image: "alpine:3.12"
            pull: false

    kubernetes_pod_fs:
        type: bahub.transports.kubernetespodexec
        spec:
            namespace: kube-system
            selector: "component=etcd"

#    docker_postgres:
#        type: bahub.transports.docker
#        spec:
#            container: "s3pb_db_postgres_1"
#
#    docker_postgres_offline:
#        type: bahub.transports.temporarydocker
#        spec:
#            orig_container: "s3pb_db_postgres_1"
#            temp_container_image: "postgres:13.1"
#            shell: /bin/bash

backups:
    fs_kubernetes_pod:
        meta:
            type: bahub.adapters.filesystem
            access: secured
            encryption: strong
            collection_id: "${TEST_COLLECTION_ID}"
            transport: kubernetes_pod_fs
        spec:
            paths:
                - /var/www

    fs_docker:
        meta:
            type: bahub.adapters.filesystem
            access: secured
            encryption: strong
            collection_id: "${TEST_COLLECTION_ID}"
            transport: docker_fs
        spec:
            paths:
                - /var/www

    fs:
        meta:
            type: bahub.adapters.filesystem
            access: secured
            encryption: strong
            collection_id: "${TEST_COLLECTION_ID}"
            transport: local
        spec:
            paths:
                - ./

#    postgres_fs_cold_files_backup:
#        meta:
#            type: bahub.adapters.filesystem
#            access: secured
#            encryption: strong
#            collection_id: "${TEST_COLLECTION_ID}"
#            transport: docker_postgres_offline
#        spec:
#            paths:
#                - /var/lib/postgresql

#    db_mysql:
#        meta:
#            type: bahub.adapters.mysql
#            access: secured
#            encryption: strong
#            collection_id: "${TEST_COLLECTION_ID}"
#            transport: docker_mysql
#        spec:
#            host: "127.0.0.1"
#            port: 3306
#            user: "root"
#            password: "root"

#    db_postgres_dump_all_databases:
#        meta:
#            type: bahub.adapters.postgres_dump
#            access: secured
#            encryption: strong
#            collection_id: "${TEST_COLLECTION_ID}"
#            transport: docker_postgres
#        spec:
#            host: "127.0.0.1"
#            port: 5432
#            user: "bakunin"
#            password: "communism-cannot-be-enforced"
#
#    db_postgres_dump_single_database:
#        meta:
#            type: bahub.adapters.postgres_dump
#            access: secured
#            encryption: strong
#            collection_id: "${TEST_COLLECTION_ID}"
#            transport: docker_postgres
#        spec:
#            host: "127.0.0.1"
#            port: 5432
#            user: "bakunin"
#            password: "communism-cannot-be-enforced"
#            database: "riotkit"

#notifiers:
    #mattermost:
    #    type: slack
    #    url: "http://localhost"
